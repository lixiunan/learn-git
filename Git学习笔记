目录
一.Git简介
  1.Git是目前世界上最先进的分布式版本控制系统（没有之一）。
  2.集中式(CVS、SVN)VS分布式：
    1)集中式版本控制系统，版本库集中存放在中央服务器，(个人)必须要联网才能工作,没有历史版本库。
    2)分布式版本控制系统，没有“中央服务器”，每个开发人员电脑上都有一个完整的版本库。
    3)分布式优势：安全性更高，无需联网，若“中央服务器”故障，任何一个其他开发者本地都有最新的带历史记录的版本库。
    4)主要区别在于历史版本库的存放，集中式历史版本只存在于中央服务器，而分布式中每个本地库都有历史记录存放。
二.安装Git
三.Git命令
   1.创建版本库:
        1)选择一个合适目录
	Windows系统请确保目录名（包括父目录）不包含中文

	如$ cd d:
	$ mkdir <repository-name>，创建库名
	$ cd <repository-name>，进入库内
	补充 pwd显示路径，ls显示当前目录，ls -ah显示隐藏目录
	
	2)在当前目录初始化库(通过git init命令把这个目录变成Git可以管理的仓库：)
	$ git init
	
	3)添加文件到Git仓库，分两步：
	  a)使用命令git add <file>，注意，可反复多次使用，添加多个文件；
	  b)使用命令git commit -m <message>，完成。
	  注意 :可以多次git add ，最后一次git commit
	
   2.git status                查看工作区当前状态
     git diff <file-name>      查看修改内容
     git log                   查看提交历史，以便确定要回退到哪个版本  （按q退出查看）
     git log --pretty=oneline  简化显示提交历史日志
     git reflog                查看命令历史，以便确定要回到未来的哪个版本
     * HEAD，当前版本
     * HEAD^，上个版本
     * HEAD^^，上上个版本
     * HEAD~100，往上100个版本
     git reset --hard HEAD^    回退到上一个版本
     git reset --hard 1094a    后退版本，1094a是版本ID，写前几位就可以
四.工作区与暂存区
   工作区就是电脑中能看到的目录，工作区有一个隐藏目录.git，这是Git的版本库
   需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。
五.管理修改
   ***  Git管理的是修改，而不是文件；Git是跟踪修改的，每次修改，如果不用git add到暂存区，那就不会加入到commit中
   git diff HEAD -- <readme.txt文件名称>     命令可以查看工作区和版本库里面最新版本的区别；
   1.修改但未add 
     比较工作区与暂存区（即上次git add的内容）的不同
        a) git diff               比较所有修改文件的不同
	b) git diff <file-name>   比较指定修改文件的不同
   2.修改已add但未commit
      git diff --staged  /  git diff --cached    比较暂存区与仓库分支（上次git commit）的不同
六.撤销修改
   1.git checkout -- <readme.txt file-name>  把文件在工作区的修改全部撤销，这里有两种情况：
     一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
     一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
     总之，就是让这个文件回到最近一次git commit或git add时的状态。
   2.git reset HEAD <file>      可以把暂存区的修改撤销掉（unstage），重新放回工作区  
    git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。
七.删除文件
   1.一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用rm命令删了   rm test.txt
   2.确定要删除，执行步骤： 
      a)git rm test.txt    
      b) git commit -m "remove test.txt"
   3.删错了
     git checkout -- <file-name>
     注意：git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
     ⚠️：从来没有被添加到版本库就被删除的文件，是无法恢复的！
	


    
  
